{"version":3,"sources":["images/profile-pic.png","logo.svg","Intro.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Intro","className","style","fontFamily","fontSize","color","letterSpacing","fontWeight","marginTop","width","About","skills","id","src","ProfilePic","App","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oIAAAA,EAAOC,QAAU,IAA0B,yC,uECA3CD,EAAOC,QAAU,IAA0B,kC,yFC0C5BC,MAtCf,WA0BI,OACI,yBAAKC,UAAU,SACX,yBAAKC,MA3BS,CAClBC,WAAY,WACZC,SAAU,OACVC,MAAO,YAwBH,wBACA,yBAAKH,MAtBK,CACdC,WAAY,QACZG,cAAe,MACfD,MAAM,QACNE,WAAY,MACZH,SAAU,SAiBN,cACA,yBAAKF,MAfO,CAChBC,WAAY,QACZI,WAAY,MACZH,SAAU,SAYN,2BACA,yBAAKF,MAVY,CACrBM,UAAW,OACXC,MAAO,UAQH,iJ,gBC+BGC,MA7Df,WAEI,IAQMC,EAAS,CACX,qCACA,aACA,QACA,QACA,WACA,6CACA,4BACA,0CACA,cAGJ,OACI,yBAAKV,UAAU,SACX,6BACI,yBAAKW,GAAG,cACJ,yCAEJ,6BACA,2BA1BR,yJA2BQ,2BAxBR,4TA8BQ,6BACI,gFACA,4BACI,4BAAKD,EAAO,IACZ,4BAAKA,EAAO,IACZ,4BAAKA,EAAO,IACZ,4BAAKA,EAAO,IACZ,4BAAKA,EAAO,MAGpB,6BACI,4DACA,4BACI,4BAAKA,EAAO,IACZ,4BAAKA,EAAO,IACZ,4BAAKA,EAAO,IACZ,4BAAKA,EAAO,OAIxB,yBAAKE,IAAKC,QCjCPC,MArBf,WACE,OACE,yBAAKd,UAAU,OACb,iCAEA,yBAAKA,UAAU,cACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,uBACEA,UAAU,WACVe,KAAK,iDACLC,OAAO,SACPC,IAAI,uBAJN,kBCHYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f2516a4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-pic.1fefd4af.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\nimport './App.css';\r\n\r\nfunction Intro() {\r\n    const greetingStyle = {\r\n        fontFamily: \"Consolas\",\r\n        fontSize: \"22px\",\r\n        color: \"#6adebd\"\r\n    }\r\n\r\n    const nameStyle = {\r\n        fontFamily: \"Arial\",\r\n        letterSpacing: \"2px\",\r\n        color:\"white\",\r\n        fontWeight: \"700\",\r\n        fontSize: \"80px\",\r\n    }\r\n\r\n    const whoAmIStyle = {\r\n        fontFamily: \"Arial\",\r\n        fontWeight: \"700\",\r\n        fontSize: \"48px\",\r\n    }\r\n\r\n    const descriptionStyle = {\r\n        marginTop: \"20px\",\r\n        width: \"500px\",\r\n    }\r\n\r\n    return (\r\n        <div className=\"intro\">\r\n            <div style={greetingStyle}>Hi there, my name is</div>\r\n            <div style={nameStyle}>Daryl Goh.</div>\r\n            <div style={whoAmIStyle}>People call me Dargo :)</div>\r\n            <div style={descriptionStyle}>\r\n                Based in sunny Singapore, I'm a Y3 Computer Science undergraduate from NUS that's an aspiring UX / Product designer and frontend developer.\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro","import React from 'react'\r\n\r\nimport ProfilePic from './images/profile-pic.png';\r\nimport './App.css';\r\n\r\nfunction About() {\r\n\r\n    const firstPara =\r\n        \"Hey there. I'm Daryl, and I'm based in Singapore. I'm currently a Y3 Computer Science undergraduate studying in the National University of Singapore.\";\r\n\r\n    const secondPara = \r\n        \"As stated in the intro, I'm aspiring to work in the UX / Product design field. I'm also a fan of UI design. My drive comes in the creation\" +\r\n        \"of a product that is able to exude a positive influence and experience for the end user. Ultimately, the end goal is to make a user happy, while helping\" +\r\n        \"them at the same time.\";\r\n\r\n    const skills = [\r\n        \"Java / Object-Oriented Programming\",\r\n        \"HTML & CSS\",\r\n        \"React\",\r\n        \"Figma\",\r\n        \"Adobe XD\",\r\n        \"Adobe Photoshop / Lightroom / Premiere Pro\",\r\n        \"Photography & Videography\",\r\n        \"GameMaker Studio 2 / GameMaker Language\",\r\n        \"Mario Kart\"\r\n    ];\r\n\r\n    return (\r\n        <div className=\"about\">\r\n            <div>\r\n                <div id=\"page-title\">\r\n                    <h1>About Me</h1>\r\n                </div>\r\n                <hr/>\r\n                <p>{firstPara}</p>\r\n                <p>{secondPara}</p>\r\n                {/* <p>\r\n                    Currently, I'm still studying at the National University of Singapore.\r\n                    In university, I've taken modules that have intrinsic value in giving me the experience in creating solutions for a problem.\r\n                    Such modules include CS2103T, a software engineering project, as well as CS3240 and NM2213, which taught me interaction design principles and methods, in addition to equipping me with skills required for a UI/UX designer.\r\n                </p> */}\r\n                <div>\r\n                    <div>Here are some skills that I've acquired so far:</div>\r\n                    <ul>\r\n                        <li>{skills[0]}</li>\r\n                        <li>{skills[1]}</li>\r\n                        <li>{skills[2]}</li>\r\n                        <li>{skills[3]}</li>\r\n                        <li>{skills[4]}</li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <div>Other miscellaneous skills:</div>\r\n                    <ul>\r\n                        <li>{skills[5]}</li>\r\n                        <li>{skills[6]}</li>\r\n                        <li>{skills[7]}</li>\r\n                        <li>{skills[8]}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <img src={ProfilePic}></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Intro from './Intro';\nimport About from './About';\nimport Navbar from './Navbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n      </header>\n      <div className=\"App-header\">\n        <Intro />\n        <About />\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/dargohzy/personal-portfolio\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Github Repo\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}